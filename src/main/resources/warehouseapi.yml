openapi: 3.0.3
info:
  title: warehouse
  description: Сервис по работе со складом
  contact: {}
  version: 1.0.0
servers:
  - url: 'https://localhost:8080'
tags:
  - name: User-API
  - name: Product-API
  - name: Order-API
paths:
  /user:
    post:
      tags:
        - User-API
      summary: добавление нового пользователя системы
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '201':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
    get:
      tags:
        - User-API
      summary: получение списка пользователей
      operationId: getAllUsers
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/UserDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
  /user/{id}:
    put:
      tags:
        - User-API
      summary: обновление данных пользователя системы
      operationId: updateUser
      parameters:
        - name: id
          in: query
          description: Ид зарегистрированного пользователя
          required: true
          style: simple
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
    get:
      tags:
        - User-API
      summary: получение данных о пользователе по идентификатору
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: ид зарегестрированного пользователя
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - User-API
      summary: удаление пользователя
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ид зарегестрированного пользователя
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: Успешный запрос
        '400':
          description: Некорректный запрос
        '500':
          description: Внутренняя ошибка сервера
  /user/login/{login}:
    get:
      tags:
        - User-API
      summary: получение пользователя по логину
      operationId: getUserByLogin
      parameters:
        - name: login
          in: path
          description: логин пользователя
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
  /product:
    post:
      tags:
        - Product-API
      summary: добавление новой карточки товара
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
      responses:
        '201':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
  /product/{id}:
    put:
      tags:
        - Product-API
      summary: обновление карточки товара
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: идентификатор карточки товара
          required: true
          style: simple
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
    get:
      tags:
        - Product-API
      summary: получение карточки товара по id
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: идентификатор карточки товара
          required: true
          style: simple
          schema:
            type: integer
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - Product-API
      summary: удаление карточки товара по id
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: идентификатор карточки товара
          required: true
          style: simple
          schema:
            type: integer
      responses:
        '200':
          description: Успешный запрос
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
  /product/category/{category}:
    get:
      tags:
        - Product-API
      summary: получение списка товаров в указанной категории
      operationId: getProductByCategory
      parameters:
        - name: category
          in: path
          description: название категории
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/ProductDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
  /product/article/{article}:
    get:
      tags:
        - Product-API
      summary: получение товара по артикулу
      operationId: getProductByArticle
      parameters:
        - name: article
          in: path
          description: артикул продукта
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
  /order:
    post:
      tags:
        - Order-API
      summary: добавление нового заказа
      operationId: addOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '201':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
  /order/{id}:
    put:
      tags:
        - Order-API
      summary: обновление информации о заказе
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          description: идентификатор заказа
          required: true
          style: simple
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
    get:
      tags:
        - Order-API
      summary: получение информации о заказе по id
      operationId: getOrder
      parameters:
        - name: id
          in: path
          description: идентификатор заказа
          required: true
          style: simple
          schema:
            type: integer
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - Order-API
      summary: удаление карточки товара по id
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          description: идентификатор заказа
          required: true
          style: simple
          schema:
            type: integer
      responses:
        '204':
          description: Успешный запрос
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string
  /order/parameters:
    get:
      tags:
        - Order-API
      summary: получение карточки заказа по id
      operationId: getOrdersByParameter
      parameters:
        - name: user_id
          in: query
          description: id пользователя, создавшего заказ
          required: false
          style: simple
          schema:
            type: string
        - name: client_id
          in: query
          description: id клиента
          required: false
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/OrderDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: string

components:
  schemas:
    UserDto:
      type: object
      description: Пользователь системы
      properties:
        id:
          type: integer
        login:
          type: string
        password:
          type: string
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
        phone:
          type: string
        email:
          type: string
        position:
          type: string
        created:
          type: string
          format: date-time
        account_is_locked:
          type: boolean
        password_expiration_date:
          type: string
          format: date-time
    ProductDto:
      description: карточка товара
      properties:
        id:
          type: integer
        article:
          type: string
        name:
          type: string
        category:
          type: string
        count:
          type: integer
        storage_place:
          type: string
    OrderItemDto:
      description: позиция в заказе
      properties:
        id:
          type: integer
        product_id:
          type: integer
        count:
          type: integer
    OrderDto:
      description: карточка заказа
      properties:
        id:
          type: integer
        created:
          type: string
          format: date-time
        user_id:
          type: integer
        delivery_address:
          type: string
        client_fio:
          type: string
        client_id:
          type: string
        uid:
          type: string
        delivery_time:
          type: string
          format: date-time
        status:
          type: string
        comment:
          type: string
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGHT
        items:
          type: array
          items:
            allOf:
                - $ref: '#/components/schemas/OrderItemDto'
